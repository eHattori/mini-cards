# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/seed_dump/all/seed_dump.rbi
#
# seed_dump-3.3.1

class SeedDump
  extend SeedDump::DumpMethods
  extend SeedDump::Environment
end
module SeedDump::DumpMethods
  def active_record_import_options(options); end
  def attribute_names(records, options); end
  def dump(records, options = nil); end
  def dump_attribute_new(attribute, value, options); end
  def dump_record(record, options); end
  def model_for(records); end
  def open_io(options); end
  def range_to_string(object); end
  def value_to_s(value); end
  def write_records_to_io(records, io, options); end
  include SeedDump::DumpMethods::Enumeration
end
module SeedDump::DumpMethods::Enumeration
  def active_record_enumeration(records, io, options); end
  def batch_params_from(records, options); end
  def batch_size_from(records, options); end
  def enumerable_enumeration(records, io, options); end
end
module SeedDump::Environment
  def dump_using_environment(env = nil); end
  def parse_boolean_value(value); end
  def retrieve_append_value(env); end
  def retrieve_batch_size_value(env); end
  def retrieve_exclude_value(env); end
  def retrieve_file_value(env); end
  def retrieve_import_value(env); end
  def retrieve_integer_value(key, hash); end
  def retrieve_limit_value(env); end
  def retrieve_models(env); end
  def retrieve_models_exclude(env); end
end
class SeedDump::Railtie < Rails::Railtie
end
